{
  "name": "C",
  "description": "A general-purpose, procedural computer programming language supporting structured programming.",
  "lessons": [
    {
      "title": "Basic Syntax",
      "description": "Learn about C basic syntax and structure",
      "content": [
        "#include <stdio.h>",
        "int main() {",
        "    printf(\"Hello, World!\\n\");",
        "    return 0;",
        "}"
      ]
    },
    {
      "title": "Variables",
      "description": "Learn about C variables",
      "content": [
        "int number = 42;",
        "float pi = 3.14159f;",
        "char grade = 'A';"
      ]
    },
    {
      "title": "Constants",
      "description": "Learn about C constants",
      "content": [
        "const int MAX_VALUE = 1000;"
      ]
    },
    {
      "title": "Functions",
      "description": "Learn about C functions",
      "content": [
        "int add(int a, int b);",
        "float multiply(float a, float b);"
      ]
    },
    {
      "title": "Control Flow",
      "description": "Learn about C control flow statements",
      "content": [
        "if (score >= 90) {",
        "    printf(\"Grade: A\\n\");",
        "} else {",
        "    printf(\"Grade: F\\n\");",
        "}"
      ]
    },
    {
      "title": "Loops",
      "description": "Learn about C loops",
      "content": [
        "for (int i = 1; i <= 5; i++) {",
        "    printf(\"Count: %d\\n\", i);",
        "}"
      ]
    },
    {
      "title": "Arrays",
      "description": "Learn about C arrays",
      "content": [
        "int numbers[5] = {1, 2, 3, 4, 5};"
      ]
    },
    {
      "title": "Structures",
      "description": "Learn about C structures",
      "content": [
        "struct Person {",
        "    char name[50];",
        "    int age;",
        "};"
      ]
    },
    {
      "title": "Pointers",
      "description": "Learn about C pointers",
      "content": [
        "int* pNumber = &number;"
      ]
    },
    {
      "title": "Strings",
      "description": "Learn about C strings",
      "content": [
        "char* message = \"Hello, World!\";"
      ]
    },
    {
      "title": "File Input/Output",
      "description": "Learn about C file input/output",
      "content": [
        "#include <stdio.h>",
        "FILE* file = fopen(\"example.txt\", \"w+\");",
        "if (file == NULL) {",
        "    printf(\"Error opening file\");",
        "    return 1;",
        "}",
        "fprintf(file, \"Hello, World!\\n\");",
        "fclose(file);"
      ]
    },
    {
      "title": "Dynamic Memory Allocation",
      "description": "Learn about C dynamic memory allocation",
      "content": [
        "#include <stdlib.h>",
        "int* pNumber = malloc(sizeof(int));",
        "if (pNumber == NULL) {",
        "    printf(\"Error allocating memory\");",
        "    return 1;",
        "}"
      ]
    },
    {
      "title": "Error Handling",
      "description": "Learn about C error handling",
      "content": [
        "#include <stdio.h>",
        "#include <stdlib.h>",
        "",
        "int main() {",
        "    FILE* file = fopen(\"example.txt\", \"r\");",
        "    if (file == NULL) {",
        "        perror(\"Error opening file\");",
        "        return 1;",
        "    }",
        "    fclose(file);",
        "    return 0;",
        "}"
      ]
    },
    {
      "title": "Structures",
      "description": "Learn about C structures",
      "content": [
        "struct Person {",
        "    char name[50];",
        "    int age;",
        "};",
        "",
        "struct Person person;",
        "strcpy(person.name, \"John\");",
        "person.age = 25;"
      ]
    },
    {
      "title": "Unions",
      "description": "Learn about C unions",
      "content": [
        "union Data {",
        "    int number;",
        "    float decimal;",
        "    char character;",
        "};"
      ]
    },
    {
      "title": "Enumerations",
      "description": "Learn about C enumerations",
      "content": [
        "enum Color {",
        "    RED,",
        "    GREEN,",
        "    BLUE",
        "};"
      ]
    },
    {
      "title": "Preprocessor Directives",
      "description": "Learn about C preprocessor directives",
      "content": [
        "#include <stdio.h>",
        "#define PI 3.14",
        "",
        "int main() {",
        "    printf(\"%f\\n\", PI);",
        "    return 0;",
        "}"
      ]
    },
    {
      "title": "Bitwise Operations",
      "description": "Learn about C bitwise operations",
      "content": [
        "int number = 5;",
        "int result = number << 2;"
      ]
    },
    {
      "title": "Recursion",
      "description": "Learn about C recursion",
      "content": [
        "int factorial(int n) {",
        "    if (n == 0) {",
        "        return 1;",
        "    } else {",
        "        return n * factorial(n - 1);",
        "    }",
        "}"
      ]
    }
  ]
}