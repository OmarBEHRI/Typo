{
  "name": "Java",
  "description": "A class-based, object-oriented programming language designed to have as few implementation dependencies as possible.",
  "lessons": [
    {
      "title": "Basic Syntax",
      "description": "Learn about Java basic syntax and structure",
      "content": [
        "public class HelloWorld {",
        "    public static void main(String[] args) {",
        "        System.out.println(\"Hello, World!\");",
        "    }",
        "}"
      ]
    },
    {
      "title": "Variables",
      "description": "Practice declaring and initializing variables",
      "content": [
        "int number = 42;",
        "String message = \"Welcome to Java programming!\";",
        "System.out.println(message);",
        "System.out.println(\"The value of number is: \" + number);"
      ]
    },
    {
      "title": "If Statement",
      "description": "Practice using if statements",
      "content": [
        "int score = 85;",
        "if (score >= 90) {",
        "    System.out.println(\"Grade: A\");",
        "} else {",
        "    System.out.println(\"Grade: F\");",
        "}"
      ]
    },
    {
      "title": "Switch Statement",
      "description": "Practice using switch statements",
      "content": [
        "int day = 3;",
        "String dayName;",
        "switch (day) {",
        "    case 1:",
        "        dayName = \"Monday\";",
        "        break;",
        "    case 2:",
        "        dayName = \"Tuesday\";",
        "        break;",
        "    case 3:",
        "        dayName = \"Wednesday\";",
        "        break;",
        "    default:",
        "        dayName = \"Invalid day\";",
        "        break;",
        "}",
        "System.out.println(\"Day: \" + dayName);"
      ]
    },
    {
      "title": "Loops",
      "description": "Practice using for and while loops",
      "content": [
        "for (int i = 1; i <= 5; i++) {",
        "    System.out.println(\"Count: \" + i);",
        "}",
        "int countdown = 5;",
        "while (countdown > 0) {",
        "    System.out.println(\"Countdown: \" + countdown);",
        "    countdown--;",
        "}"
      ]
    },
    {
      "title": "Arrays",
      "description": "Practice using arrays",
      "content": [
        "int[] numbers = {1, 2, 3, 4, 5};",
        "for (int i = 0; i < numbers.length; i++) {",
        "    System.out.println(\"Element at index \" + i + \" is: \" + numbers[i]);",
        "}"
      ]
    },
    {
      "title": "Methods",
      "description": "Practice declaring and calling methods",
      "content": [
        "void sayHello() {",
        "    System.out.println(\"Hello!\");",
        "}",
        "sayHello();"
      ]
    },
    {
      "title": "Classes and Objects",
      "description": "Learn the basics of classes and objects",
      "content": [
        "class Person {",
        "    String name;",
        "    int age;",
        "    Person(String name, int age) {",
        "        this.name = name;",
        "        this.age = age;",
        "    }",
        "    void greet() {",
        "        System.out.println(\"Hello, my name is \" + name + \" and I am \" + age + \" years old.\");",
        "    }",
        "}",
        "Person person1 = new Person(\"John\", 25);",
        "person1.greet();"
      ]
    },
    {
      "title": "Inheritance",
      "description": "Learn about inheritance in Java",
      "content": [
        "class Animal {",
        "    String name;",
        "    Animal(String name) {",
        "        this.name = name;",
        "    }",
        "    void sound() {",
        "        System.out.println(name + \" makes a sound.\");",
        "    }",
        "}",
        "class Dog extends Animal {",
        "    Dog(String name) {",
        "        super(name);",
        "    }",
        "    void sound() {",
        "        System.out.println(name + \" barks.\");",
        "    }",
        "}",
        "Dog myDog = new Dog(\"Buddy\");",
        "myDog.sound();"
      ]
    },
    {
      "title": "Polymorphism",
      "description": "Learn about polymorphism in Java",
      "content": [
        "class Animal {",
        "    String name;",
        "    Animal(String name) {",
        "        this.name = name;",
        "    }",
        "    void sound() {",
        "        System.out.println(name + \" makes a sound.\");",
        "    }",
        "}",
        "class Dog extends Animal {",
        "    Dog(String name) {",
        "        super(name);",
        "    }",
        "    void sound() {",
        "        System.out.println(name + \" barks.\");",
        "    }",
        "}",
        "class Cat extends Animal {",
        "    Cat(String name) {",
        "        super(name);",
        "    }",
        "    void sound() {",
        "        System.out.println(name + \" meows.\");",
        "    }",
        "}",
        "Animal myPet = new Dog(\"Buddy\");",
        "myPet.sound();",
        "myPet = new Cat(\"Whiskers\");",
        "myPet.sound();"
      ]
    },
    {
      "title": "Interfaces",
      "description": "Learn about interfaces in Java",
      "content": [
        "interface Printable {",
        "    void print();",
        "}",
        "class Document implements Printable {",
        "    String text;",
        "    Document(String text) {",
        "        this.text = text;",
        "    }",
        "    void print() {",
        "        System.out.println(text);",
        "    }",
        "}",
        "Printable doc = new Document(\"Hello, World!\");",
        "doc.print();"
      ]
    },
    {
      "title": "Abstract Classes",
      "description": "Learn about abstract classes in Java",
      "content": [
        "abstract class Animal {",
        "    String name;",
        "    Animal(String name) {",
        "        this.name = name;",
        "    }",
        "    abstract void sound();",
        "}",
        "class Dog extends Animal {",
        "    Dog(String name) {",
        "        super(name);",
        "    }",
        "    void sound() {",
        "        System.out.println(name + \" barks.\");",
        "    }",
        "}",
        "Animal myPet = new Dog(\"Buddy\");",
        "myPet.sound();"
      ]
    },
    {
      "title": "Exception Handling",
      "description": "Learn about exception handling in Java",
      "content": [
        "try {",
        "    int x = 5 / 0;",
        "} catch (ArithmeticException e) {",
        "    System.out.println(\"Exception: \" + e.getMessage());",
        "}"
      ]
    },
    {
      "title": "Constructors",
      "description": "Practice declaring constructors",
      "content": [
        "class Person {",
        "    String name;",
        "    int age;",
        "    Person(String name, int age) {",
        "        this.name = name;",
        "        this.age = age;",
        "    }",
        "}",
        "Person person1 = new Person(\"John\", 25);"
      ]
    },
    {
      "title": "Java Collections Framework",
      "description": "Learn about the Java Collections Framework",
      "content": [
        "import java.util.ArrayList;",
        "import java.util.List;",
        "",
        "List<String> list = new ArrayList<String>();",
        "list.add(\"Hello\");",
        "list.add(\"World!\");",
        "System.out.println(list);"
      ]
    },
    {
      "title": "Java Streams",
      "description": "Learn about Java Streams",
      "content": [
        "import java.util.List;",
        "import java.util.stream.Collectors;",
        "",
        "List<String> list = List.of(\"Hello\", \"World!\");",
        "List<String> upperCaseList = list.stream()",
        "    .map(String::toUpperCase)",
        "    .collect(Collectors.toList());",
        "System.out.println(upperCaseList);"
      ]
    },
    {
      "title": "Lambda Expressions",
      "description": "Learn about lambda expressions in Java",
      "content": [
        "import java.util.function.Consumer;",
        "",
        "Consumer<String> printer = s -> System.out.println(s);",
        "printer.accept(\"Hello, World!\");"
      ]
    },
    {
      "title": "Method References",
      "description": "Learn about method references in Java",
      "content": [
        "import java.util.function.Consumer;",
        "",
        "Consumer<String> printer = System.out::println;",
        "printer.accept(\"Hello, World!\");"
      ]
    }
  ]
}